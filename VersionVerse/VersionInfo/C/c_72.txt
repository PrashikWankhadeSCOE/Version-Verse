The original version of the C programming language, developed by Dennis Ritchie at Bell Labs in 1972, served as the foundation for all subsequent versions and standards of C. 

1. Simplicity: C was designed to be a simple and efficient language. It provided a minimal set of keywords and constructs, making it easy to learn and use.

2. Low-Level Programming: C allowed for low-level programming by providing direct access to memory through pointers. Programmers had fine-grained control over memory and hardware, which was important for systems programming.

3. Structured Programming: C introduced structured programming concepts, such as loops, conditionals, and functions. It allowed programmers to write organized and modular code.

4. Portability: C was designed to be a portable language, which means that code written in C could be compiled and run on different computer architectures with minimal modifications. This was a significant advancement for the time.

5. Data Types: C introduced a variety of data types, including integers, characters, and floating-point numbers. It also allowed the creation of user-defined data types through structures and unions.

6. Functions: C introduced the concept of functions as reusable blocks of code. Functions could take parameters and return values, enabling modular programming.

7. Header Files: C introduced the concept of header files (e.g., <stdio.h>), which allowed programmers to include predefined functions and declarations in their programs.

8. Pointers: C introduced pointers, which are variables that store memory addresses. Pointers allowed for efficient memory manipulation and were essential for systems programming.

9. Standard I/O: C provided standard I/O functions like printf() and scanf(), which simplified input and output operations.

10. Library Functions: The original C version included a basic set of library functions, such as mathematical functions (sqrt(), sin()) and string manipulation functions (strlen(), strcpy()).

11. No Standardization: It's important to note that the original version of C had no formal standard. It was primarily used within Bell Labs and shared informally. Standardization efforts began later with the ANSI C (C89/C90) standard.